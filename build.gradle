// Top-level build file where you can add configuration options common to all sub-projects/modules.

apply plugin: 'io.codearte.nexus-staging'

ext {
    minSdkVersion = 16
    compileSdkVersion = 29
    targetSdkVersion = 29
    buildToolsVersion = '29.0.3'
    gradleVersion = '3.0.1'
    kotlinVersion = '1.3.71'
}

ext.deps = [rxjava2           : 'io.reactivex.rxjava2:rxjava:2.2.19',
            rxandroid2        : 'io.reactivex.rxjava2:rxandroid:2.1.1',
            appcompat         : 'androidx.appcompat:appcompat:1.1.0',
            constraintlayout  : 'androidx.constraintlayout:constraintlayout:1.1.3',
            junit             : 'junit:junit:4.13',
            truth             : 'com.google.truth:truth:1.0.1',
            mockitocore       : 'org.mockito:mockito-core:3.3.3',
            kotlinstdlib      : "org.jetbrains.kotlin:kotlin-stdlib:$kotlinVersion",
            kotlingradleplugin: "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"]

buildscript {
    repositories {
        jcenter()
        google()
        maven {
            url 'https://plugins.gradle.org/m2/'
        }
    }

    dependencies {
        classpath 'com.android.tools.build:gradle:3.6.2'
        classpath "io.codearte.gradle.nexus:gradle-nexus-staging-plugin:0.21.2"

        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

allprojects {
    repositories {
        jcenter()
        google()
        maven {
            url 'https://plugins.gradle.org/m2/'
        }
    }
}

def getRepositoryUsername() {
    return hasProperty('NEXUS_USERNAME') ? NEXUS_USERNAME : ""
}

def getRepositoryPassword() {
    return hasProperty('NEXUS_PASSWORD') ? NEXUS_PASSWORD : ""
}

nexusStaging {
    packageGroup = GROUP //optional if packageGroup == project.getGroup()
    stagingProfileId = "9add401d06ecc9" //when not defined will be got from server using "packageGroup"
    username = getRepositoryUsername()
    password = getRepositoryPassword()
}

task clean(type: Delete) {
    delete rootProject.buildDir
}
